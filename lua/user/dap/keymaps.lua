local set_keymap = vim.keymap.set
local opts = { noremap = true, silent = true }

vim.fn.sign_define('DapBreakpoint', {text='', texthl='', linehl='', numhl=''})
vim.fn.sign_define('DapBreakpointRejected', {text='', texthl='', linehl='', numhl=''})
vim.fn.sign_define('DapStopped', {text='', texthl='', linehl='', numhl=''})
-- vim.fn.sign_define('DapBreakpoint', {text='', texthl='', linehl='', numhl=''})
-- vim.fn.sign_define('DapStopped', {text='⭐️', texthl='', linehl='', numhl=''})

set_keymap('n', '<leader>dh', function() require("dap").toggle_breakpoint() end, opts)
set_keymap('n', '<leader>dH', function() require("dap").set_breakpoint(vim.fn.input("Breakpoint condition: ")) end, opts)
-- set_keymap('n', '<A-k>',      function() require("dap").step_out() end, opts)
set_keymap('n', "<A-l>",      function() require("dap").step_into() end, opts)
set_keymap('n', '<A-j>',      function() print("step"); require"dap".step_over() end, opts)
set_keymap('n', '<A-h>',      function() require("dap").continue() end, opts)
set_keymap('n', '<leader>dn', function() require("dap").run_to_cursor() end, opts)
set_keymap('n', '<leader>dc', function() require("dap").terminate() end, opts)
set_keymap('n', '<leader>dR', function() require("dap").clear_breakpoints() end, opts)
set_keymap('n', '<leader>de', function() require("dap").set_exception_breakpoints({"all"}) end, opts)
set_keymap('n', '<leader>da', function() require("debugHelper").attach() end, opts)
set_keymap('n', '<leader>dA', function() require("debugHelper").attachToRemote() end, opts)
set_keymap('n', '<leader>di', function() require("dap.ui.widgets").hover() end, opts)
set_keymap('n', '<leader>d?', function() local widgets=require"dap.ui.widgets";widgets.centered_float(widgets.scopes) end, opts)
set_keymap('n', '<leader>dk', ':lua require"dap".up()<CR>zz<CR>', opts)
set_keymap('n', '<leader>dj', ':lua require"dap".down()<CR>zz<CR>', opts)
set_keymap('n', '<leader>dr', ':lua require"dap".repl.toggle({}, "vsplit")<CR><C-w>l', opts)
